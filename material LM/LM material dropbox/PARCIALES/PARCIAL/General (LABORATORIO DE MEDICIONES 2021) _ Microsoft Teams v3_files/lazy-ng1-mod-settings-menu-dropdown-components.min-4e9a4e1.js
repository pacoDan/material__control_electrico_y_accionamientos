webpackJsonp([40],{2264:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(2265)},2265:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2266),s=function(){function t(t,e,n,o,s,r,a,i,c,l,p,u,g,d,m,k,h,y,v,b,C,w,S,M,D,f,$,P,_,T,A,N,I,U){var E=this;this.$window=t,this.$q=e,this.$scope=n,this.$state=o,this.$translate=s,this.ngDialog=r,this.$timeout=a,this.clientDatabase=i,this.teamsUpdateManagementSettingsStore=c,this.desktopUtilityService=l,this.authenticationService=p,this.identityService=u,this.resources=g,this.constants=d,this.appsService=m,this.navigationService=k,this.loggingService=h,this.settingsService=y,this.analyticsService=v,this.dialogService=b,this.helpService=C,this.shortcutService=w,this.layoutService=S,this.workerDataLayerClientHandler=M,this.appInfoService=f,this.tenantPrivacyProfileService=$,this.tenantSettingsStore=P,this.updateAppService=_,this.downloadAppService=T,this.hybridContentVisibilityManager=A,this.utilityService=N,this.publicPreviewService=I,this.showPrideToggle=!1,this.isChannelsV2Enabled=!1,this.enableChannelsV2Toggle=!1,this.enableNewHelpInAppBar=!1,this.zoomUiEnabled=!1,this.zoomPercentString="100%",this.chatServiceIntEnvironmentApis=["merlotcity","local"],this.showPublicPreviewSetting=!1,this.displayPreviewButtonInMeMenu=!1,this.teamsPrivacyFaqUrl=void 0,this.displayCastingElement=!1,this.showFrA11yLink=!1,this.logger=h.newLogger("SettingsMenuDropdownController"),this.processApis(),this.processRings(),this.processPublicDevPreviewSetting(),this.isDesktopApp=l.isElectron(),this.isSurfaceHub=l.isElectronAppSurfaceHub(),this.enableMopoLink=y.valueAsBoolean(d.settings.names.enableMopoLinkInSettingsDropdown),this.enableHelpItem=y.valueAsBoolean(d.settings.names.botsEnabled),this.enableNewHelpInAppBar=y.valueAsBoolean(d.settings.names.enableNewHelpInAppBar),this.enableWebTPN=y.valueAsBoolean(d.settings.names.enableThirdPartyNoticeEntry)&&!this.isDesktopApp,this.enableDesktopTpn=y.valueAsBoolean(d.settings.names.enableThirdPartyNoticeEntry)&&this.isDesktopApp,this.displayPreviewButtonInMeMenu=this.isDesktopApp&&y.valueAsBoolean(d.settings.names.displayPreviewButtonInMeMenu),this.showPrideToggle=y.valueAsBoolean(d.settings.names.enablePrideToggle),this.showPrideToggle&&(this.isPrideThemeEnabled=y.valueAsBoolean(d.settings.names.enablePrideTheme)),this.channelsV2ToggleFlagNames=[d.settings.names.msgEnableChannelsV2,d.settings.names.msgEnableChannelsV2Header,d.settings.names.enableHybridChannelList],this.enableChannelsV2Toggle=y.valueAsBoolean(d.settings.names.enableChannelsV2Toggle),this.enableChannelsV2Toggle&&(this.isChannelsV2Enabled=this.getIsChannelsV2Enabled()),this.zoomUiEnabled=l.isElectron()&&t.desktopSettings.zoomUiEnabled&&!this.isSurfaceHub,this.handleZoomUi(),this.displayCastingElement=l.isElectron()&&y.valueAsBoolean(d.settings.names.enableTeamsCasting),this.teamsPrivacyFaqUrl=y.valueFor(d.settings.names.teamsPrivacyFaqUrl),this.showFrA11yLink=U.getLocale()===d.frenchLocale,this.frA11yLinkUrl=y.valueFor(d.settings.names.frA11yLinkUrl)||d.frA11yLinkUrl;var B=D.isCortanaEnabled();teamspace.services.QCancelable.toCancelablePromise(e,B,n).then(function(t){return E.showCortanaDevTools=t}).catch(function(){return E.showCortanaDevTools=!1}),this.legalLinkUrl=this.isFreemiumTenant?this.isFreemiumAdmin?d.legal.legalUrlFreemium.admin:d.legal.legalUrlFreemium.user:d.legal.legalUrl,this.mopoLinkUrl=d.itpro.mopoUrl,this.showDesktopDownload=T.isDownloadSupported(),this.showMobileDownload=y.valueAsBoolean(d.settings.names.promoteMobile)&&!this.isSurfaceHub,this.zoomOutButtonTitle=s.instant(g.strings.zoom_out_ui_aria_label),this.zoomInButtonTitle=s.instant(g.strings.zoom_in_ui_aria_label),this.zoomResetButtonTitle=s.instant(g.strings.zoom_reset_ui_aria_label),this.settingsManageAriaLabel=s.instant(g.strings.settings_manage_aria_label),this.helpButtonTitle=s.instant(g.strings.settings_help_aria_label),this.aboutButtonTitle=s.instant(g.strings.settings_about_aria_label),this.checkUpdateButtonTitle=s.instant(g.strings.settings_check_update_aria_label),this.downloadMobileAppButtonTitle=s.instant(g.strings.settings_download_mobile_app_aria_label)}return t.$inject=["$window","$q","$scope","$state","$translate","ngDialog","$timeout","clientDatabase","teamsUpdateManagementSettingsStore","desktopUtilityService","authenticationService","identityService","resources","constants","appsService","navigationService","loggingService","settingsService","analyticsService","dialogService","helpService","shortcutService","layoutService","workerDataLayerClientHandler","cortanaConfigurationService","appInfoService","tenantPrivacyProfileService","tenantSettingsStore","updateAppService","downloadAppService","hybridContentVisibilityManager","utilityService","publicPreviewService","localizationService"],Object.defineProperty(t.prototype,"isFreemiumTenant",{get:function(){return this.settingsService.valueAsBoolean(this.constants.settings.names.enableFreemium)&&this.identityService.isFreemiumTenant()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isFreemiumAdmin",{get:function(){return this.isFreemiumTenant&&this.identityService.isTenantAdmin()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isAdmin",{get:function(){return this.identityService.isTenantAdmin()||this.identityService.isServiceAdmin()},enumerable:!0,configurable:!0}),t.prototype.optionsSettingsDialogShow=function(){var t=this,e=function(){t.dialogService.open(t.constants.dialogs.optionsSettingsDialog,{preActiveElementIds:[t.constants.appHeaderBar.buttonid.settingsMenuButton]})};e.bind(this),this.isSurfaceHub?this.elevateProcessToShowUAC(!0,e):e()},t.prototype.elevateProcessToShowUAC=function(t,e){var n,o,s=this;this.loggingService.info("Setting up listener to listen to UAC prompt event"),(null===(o=null===(n=this.$window)||void 0===n?void 0:n.desktopSettings)||void 0===o?void 0:o.enableNewEventsForUACInSHUB)?(this.$window.electronSafeIpc.once(this.constants.events.desktopApp.elevateProcessUACReply,function(t,n){s.listenerForUACReply(n,e)}),this.$window.electronSafeIpc.send(this.constants.events.desktopApp.elevateProcessAndShowUAC,t)):(this.$window.electronSafeIpc.once(this.constants.events.desktopApp.surfaceHubOpenSettingsReply,function(t,n){s.listenerForUACReply(n,e)}),this.$window.electronSafeIpc.send(this.constants.events.desktopApp.surfaceHubOpenSettings))},t.prototype.listenerForUACReply=function(t,e){t.uacResult&&e()},t.prototype.togglePrideTheme=function(t){return this.togglePreviewFeatures([this.constants.settings.names.enablePrideTheme],t,"toggle pride theme")},t.prototype.toggleChannelsV2=function(t){return this.togglePreviewFeatures(this.channelsV2ToggleFlagNames,t,"toggle channels 2.0")},t.prototype.togglePreviewFeatures=function(t,e,n){var o=this,s=this.settingsService.settings,r=this.getPreviewSettingsToUpdate(t,e);this.setValueForSettings(s,r),this.$timeout(function(){s.store(),o.layoutService.reloadApp("",n)},1e3)},t.prototype.getPreviewSettingsToUpdate=function(t,e){var n=new Map;return null===t||void 0===t||t.forEach(function(t){n.set(t,e)}),n},t.prototype.getIsChannelsV2Enabled=function(){for(var t=0;t<this.channelsV2ToggleFlagNames.length;t++)if(!this.settingsService.valueAsBoolean(this.channelsV2ToggleFlagNames[t]))return!1;return!0},t.prototype.setValueForSettings=function(t,e){for(var n=0,o=t;n<o.length;n++){var s=o[n];e.has(s.key)&&(s.active=e.get(s.key))}},t.prototype.zoomIn=function(){this.zoomIpc(this.constants.events.desktopApp.zoomIn)},t.prototype.zoomOut=function(){this.zoomIpc(this.constants.events.desktopApp.zoomOut)},t.prototype.zoomReset=function(){this.zoomIpc(this.constants.events.desktopApp.zoomReset)},t.prototype.zoomIpc=function(t){this.desktopUtilityService.isElectron()&&this.$window.electronSafeIpc.send(t,!0,this.constants.desktopApp.telemetry.zoomSource.settingsDropdownUi)},t.prototype.onZoomLevelChange=function(t,e){this.loggingService.info("New zoom percent: "+e),this.zoomPercentString=this.$translate.instant(this.resources.strings.zoom_percent_ui_string).replace("{0}",String(e)),this.loggingService.info("New zoom percent string is: "+this.zoomPercentString)},t.prototype.handleZoomUi=function(){var t=this;if(this.zoomUiEnabled&&this.$window.electronSafeIpc){var e=this.onZoomLevelChange.bind(this);this.zoomPercentString=this.$translate.instant(this.resources.strings.zoom_percent_ui_string).replace("{0}",String(this.desktopUtilityService.getZoomPercent())),this.$window.electronSafeIpc.on(this.constants.events.desktopApp.zoomLevelChange,e),this.$scope.$on("$destroy",function(){e=void 0,t.$window.electronSafeIpc.removeListener(t.constants.events.desktopApp.zoomLevelChange,e)})}},t.prototype.settingsDialog=function(t,e,n,o){void 0===n&&(n=!1),this.ngDialog.open({template:"components/settings-list/settings-list.html",className:"ngdialog-settings ngdialog-theme-default",closeByEscape:!0,closeByDocument:!0,controller:"SettingsListController",data:{title:t,cancel:"Cancel",okButton:"OK",settings:e,isTmpSetting:n,allSetting:o}})},t.prototype.debug=function(){this.settingsDialog("Debug settings",this.settingsService.debugSettings)},t.prototype.settings=function(){this.settingsDialog("Experimental settings",this.settingsService.settings)},t.prototype.tmpsettings=function(){this.settingsDialog("TMP experimental settings",this.settingsService.tmpSettings,!0)},t.prototype.openPreviewNewFeaturesDialog=function(){this.sendPreviewNewFeaturesClickedTelemetry(),this.dialogService.open(this.constants.dialogs.previewNewFeaturesDialog)},t.prototype.sendPreviewNewFeaturesClickedTelemetry=function(){var t=this,e={action:{scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.previewFeatures.toString(),teamspace.components.PanelActionScenarioType,this.logger),scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.navSettings.toString(),teamspace.components.PanelActionScenario,this.logger),gesture:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionGesture.click.toString(),teamspace.components.PanelActionGesture,this.logger),outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.nav.toString(),teamspace.components.PanelActionOutcome,this.logger)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.previewSetting.toString(),teamspace.components.PanelModuleName,this.loggingService).toString(),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.settingsButton.toString(),teamspace.components.PanelModuleType,this.loggingService),summary:"User clicked on preview new features button in settings dropdown"}};this.analyticsService.getAnalyticsPanelActionEventData(e).then(function(e){e.panel.type=teamspace.shared.AttributeHelper.tryGetEnum(teamspace.PanelType.settingsDropdown.toString(),teamspace.PanelType,t.logger).toString(),t.analyticsService.sendPanelAction(e)})},t.prototype.processApis=function(){var t=this;this.apis=[];var e=this.settingsService.getApi();if(e){var n=this.settingsService.valueFor(this.constants.settings.names.apiSettings);n&&_.keys(n).length>0?(this.showApiSelector=!0,this.currentApiDisplayName=e.friendlyName,this.currentApiId=e.id,_.keys(n).forEach(function(o){var s=n[o];s.friendlyName&&s.friendlyName.length>0&&t.apis.push({identifier:s,displayName:s.friendlyName,active:s.id===e.id})})):this.showApiSelector=!1}},t.prototype.processRings=function(){var t=this;this.rings=[];var e=this.settingsService.valueFor(this.constants.settings.names.ringOverridePermission),n=this.settingsService.getRing();if(n){var o=this.settingsService.valueFor(this.constants.settings.names.availableRings);if(e&&o&&(this.showRingSelector=!0),this.ringSelectorTitle=this.$translate.instant(this.resources.strings.settings_version),this.currentWebRingDisplayName=n.friendlyName,e==this.constants.ringSelection.ringOverridePermission.any)_.forEach(o,function(e){e.friendlyName&&e.friendlyName.length>0&&t.rings.push({identifier:e,displayName:e.friendlyName,active:e.id===n.id})});else if(e==this.constants.ringSelection.ringOverridePermission.optOut){this.ringSelectorTitle=this.$translate.instant(this.resources.strings.settings_preview);var s=this.$translate.instant(this.resources.strings.settings_preview_enabled),r=this.$translate.instant(this.resources.strings.settings_preview_disabled);this.currentWebRingDisplayName=n.isPublic?r:s,_.forEach(o,function(e){t.rings.push({identifier:e,displayName:e.isPublic?r:s,active:e.id===n.id})})}}},t.prototype.switchApi=function(t){var e=this;if("local"===t.id&&this.desktopUtilityService.isDesktop())this.showFeatureNotSupportedDialog();else{var n=this.getUrlAndRoute()+"?api="+t.id+(t.additionalQsp||""),o=this.$q.when();if(this.chatServiceIntEnvironmentApis.some(function(n){return n===t.id||n===e.currentApiId})){var s=SkypeX.Services.SyncTasks.fromThenable(this.workerDataLayerClientHandler.wipeLocalData());this.authenticationService.clearSkypeCache(),this.authenticationService.clearAdalCache(),o=SkypeX.Services.SyncTasks.whenAll([this.clientDatabase.nukeDB(),s]).then(function(){}).toNgPromise(this.$q)}o.finally(function(){e.layoutService.reloadApp(e.resources.strings.refresh_message_default,"apiChange",n)})}},t.prototype.getUrlAndRoute=function(){var t=this.isDesktopApp?"_":"";return""+this.settingsService.getRootUri()+t},t.prototype.showFeatureNotSupportedDialog=function(){var t={confirmMessageTitle:"Local middle tier is not supported in desktop app!",confirmMessageHtmlBody:"Desktop app doesn't work with local middle tier yet. There is some work needed to use 3rd party AAD App when connecting to local middle tier instance.",isConfirmation:!0,confirmDialogType:teamspace.PanelType.lastOwnerLeaveTeamDialog};this.dialogService.open(this.constants.dialogs.confirmDialog,t)},t.prototype.switchRing=function(t){var e=this.getUrlAndRoute()+"?ring="+t.id;this.layoutService.reloadApp(this.resources.strings.refresh_message_default,"ringChange",e)},t.prototype.processPublicDevPreviewSetting=function(){var t,e=this,n=this.tenantSettingsStore.getSettingValue(SkypeX.Services.TenantSettingsStorageKey.isSideLoadedAppsEnabled),o=!!this.settingsService.valueFor(this.constants.settings.names.publicDevPreviewRing);if(this.publicDevPreviewEnabled=this.settingsService.valueAsBoolean(this.constants.settings.names.publicDevPreviewEnabled),this.showPublicDevPreviewSetting=this.publicDevPreviewEnabled||n&&o,this.settingsService.valueAsBoolean(this.constants.settings.names.enableTeamsUpdateManagementSettingsAggFetch)){var s=this.settingsService.valueAsBoolean(this.constants.settings.names.enableTeamsUpdateManagementSettingsEnum);if(this.desktopUtilityService.isElectron()&&(s=null===(t=this.$window.desktopSettings)||void 0===t?void 0:t.teamsPublicPreviewEnabled),s)this.showPublicPreviewSetting=this.publicPreviewService.isPublicPreviewEnabled(),this.showPublicDevPreviewSetting=this.publicPreviewService.isDevPreviewEnabled();else{var r=this.teamsUpdateManagementSettingsStore.getSettings(),a=!(!r||!r.allowPreview)&&r.allowPreview;this.showPublicPreviewSetting=this.publicDevPreviewEnabled||a&&o}}this.appsService.getUserAppPolicy("settings-button").then(function(t){n=!(!t||!t.isSideloadingAllowed)&&t.isSideloadingAllowed,e.loggingService.info("settings-button, Get user app policy, isSideloadingAllowed: "+n),e.showPublicDevPreviewSetting=e.publicDevPreviewEnabled||n&&o,e.loggingService.info("settings-button, showPublicDevPreviewSetting: "+e.showPublicDevPreviewSetting)}).catch(function(t){e.loggingService.error("settings-button, Get user app policy failed, error: "+t)})},t.prototype.togglePublicDevPreview=function(t){var e=this,n=function(){if(e.publicDevPreviewEnabled){var n=e.getUrlAndRoute()+"?ring=clear";e.layoutService.reloadApp(e.resources.strings.refresh_message_default,t?"disableDevPreview":"disablePublicPreview",n)}else e.ngDialog.open({template:"components/dev-preview-dialog/dev-preview-dialog.html",className:"ngdialog-dev-preview ngdialog-shared ngdialog-theme-default",closeByEscape:!0,closeByDocument:!0,data:{rootUri:e.getUrlAndRoute(),isDeveloperPreview:t}})};this.isSurfaceHub&&this.$window.desktopSettings.enableNewEventsForUACInSHUB?this.elevateProcessToShowUAC(!1,n):n()},t.prototype.openUiToolkit=function(){return this.navigationService.navigatePromise(this.$scope,this.constants.states.toolkit,{})},t.prototype.cortanaDevToolsDialog=function(){this.dialogService.open(this.constants.dialogs.cortanaDevToolsDialog)},t.prototype.showRingSelectionDialog=function(){this.dialogService.open(this.constants.dialogs.ringSelection)},t.prototype.showRoutingSettingsDialog=function(){this.dialogService.open(this.constants.dialogs.routingSettings)},t.prototype.thirdPartyNoticeDialogShow=function(){this.ngDialog.open({template:"components/third-party-notice/third-party-notice.html",className:"ts-modal-dialog",closeByEscape:!0,closeByDocument:!0})},t.prototype.desktopThirdPartyNoticeShow=function(){var t,e;(null===(e=null===(t=this.$window)||void 0===t?void 0:t.desktopSettings)||void 0===e?void 0:e.openDesktopTPNInWebClient)?this.ngDialog.open({template:"components/local-third-party-notice/local-third-party-notice.html",className:"ts-modal-dialog",closeByEscape:!0,closeByDocument:!0}):this.$window.electronSafeIpc.send(this.constants.events.desktopApp.thirdPartyNotice)},t.prototype.keyboardShortcuts=function(){var t=this;this.$timeout(function(){return t.shortcutService.executeCommand(teamspace.services.CommandIdentifier.ShowShortcuts)})},t.prototype.about=function(){this.appInfoService.getVersionInfo()},t.prototype.hasTeamsPrivacyFaqUrl=function(){return!_.isNil(this.teamsPrivacyFaqUrl)},t.prototype.openPrivacyFaqLink=function(){this.$window.open(this.teamsPrivacyFaqUrl,"_blank")},t.prototype.openPrivacyLink=function(){var t=this;this.tenantPrivacyProfileService.getPrivacyPolicyURL().then(function(e){t.$window.open(e,"_blank")})},t.prototype.checkForUpdates=function(){this.updateAppService.update()},t.prototype.downloadApp=function(){this.downloadAppService.download()},t.prototype.downloadMobileApp=function(){this.settingsService.valueAsBoolean(this.constants.settings.names.enableMobileDownloadMailDialog)?this.dialogService.open(this.constants.dialogs.mobileDownload,{preActiveElementIds:[this.constants.appHeaderBar.buttonid.settingsMenuButton]}):this.$window.open("https://aka.ms/downloadteams","_blank")},t.prototype.gotoHelp=function(){this.helpService.gotoHelp()},t.prototype.gotoManage=function(){this.$state.go(this.constants.states.appManageTenant)},t.prototype.openCastWindow=function(){var t=this;if(this.displayCastingElement&&this.hybridContentVisibilityManager){var e={id:null,type:"cast",action:"view"},n=this.utilityService.generateUUID(),o={entity:e,command:{visibilityState:"show",stateTransition:"new",correlation:{id:n,startTimestamp:Date.now(),source:this.constants.events.multiWindow.entryPoints.teamsCast}}};this.hybridContentVisibilityManager.enqueueEntityCommand(o).then(function(){t.logger.info("Cast app popping out with command: "+o.entity.type+", action: "+o.entity.action+", correlationId: "+n)}).catch(function(e){t.logger.error("Error popping out cast window: "+JSON.stringify(e)+". CorrelationId: "+n)})}},t.prototype.hide=function(){this.$scope.$parent.$hide()},t}();e.SettingsMenuDropdownController=s,angular.module("teamspace.settingsMenuDropdown",["teamspace.authenticationService","teamspace.identityService","teamspace.constants","teamspace.loggingService","teamspace.settingsService","teamspace.layoutService","teamspace.helpService","teamspace.shortcutService","teamspace.appInfoService","teamspace.appsService","teamspace.tenantPrivacyProfileService","teamspace.updateAppService","teamspace.downloadAppService","skypeX.teamsUpdateManagementSettingsStore","teamspace.hybridContentVisibilityManager","teamspace.utilityService"]).component("settingsMenuDropdown",{controller:s,controllerAs:"settingsMenuDropdownCtrl",template:o})},2266:function(t,e){t.exports='<div>\n  <ul class="settings-menu" data-tid="settings-menu" acc-role="menu">\n    \x3c!-- Settings --\x3e\n    <li acc-role="focus-default menu-item" data-tid="optionsMenuItem">\n      <button class="ts-sym left-align-icon" data-tid="settingsDropdownOptionsButton" ng-click="settingsMenuDropdownCtrl.optionsSettingsDialogShow(); settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuSettings}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuSettings}}">\n        <ng-include src="\'svg/icons-settings.html\'"></ng-include>\n        {{::$root.resources.strings.settings_options | translate}}\n      </button>\n    </li>\n    <li ng-if="settingsMenuDropdownCtrl.showPrideToggle" acc-role="focus-default menu-item" data-tid="prideMenuItem" class="pride-menu-item">\n      <span class="pride-icon"></span>\n      <span class="pride-label">{{ ::$root.resources.strings.settings_option_pride_mode | translate }}</span>\n      <toggle-switch is-checked="settingsMenuDropdownCtrl.isPrideThemeEnabled" on-toggle="settingsMenuDropdownCtrl.togglePrideTheme(isChecked)">\n      </toggle-switch>\n    </li>\n    <li ng-if="settingsMenuDropdownCtrl.enableChannelsV2Toggle" acc-role="menu-item" data-tid="enableChannelsV2Toggle" class="channels-v2-menu-item">\n      <span class="channels-v2-label">{{ ::$root.resources.strings.settings_option_channels_v2_mode | translate }}</span>\n      <toggle-switch is-checked="settingsMenuDropdownCtrl.isChannelsV2Enabled" on-toggle="settingsMenuDropdownCtrl.toggleChannelsV2(isChecked)">\n      </toggle-switch>\n    </li>\n    \x3c!-- Teams Cast --\x3e\n    <li acc-role="menu-item" ng-if="settingsMenuDropdownCtrl.displayCastingElement">\n      <button class="ts-sym left-align-icon" id="teamsCastButton" ng-click="settingsMenuDropdownCtrl.openCastWindow();settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuTeamsCast}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuTeamsCast}}">\n        <ng-include src="\'svg/icons-cast.html\'"></ng-include>\n        {{::$root.resources.strings.teams_cast | translate}}\n      </button>\n    </li>\n    <li acc-role="menu-separator" class="divider"></li>\n    \x3c!-- Zoom --\x3e\n    <li ng-if="settingsMenuDropdownCtrl.zoomUiEnabled" tabindex="-1">\n      <div class="zoom-ui-menu">\n        <span class="zoom-ui-title" translate-once="{{::$root.resources.strings.zoom_percent_ui_title_string}}"></span>\n        <button acc-role="focus-default menu-item" class="zoom-icon inset-border inset-border-round inset-border-themed app-icons-fill-hover" ng-click="settingsMenuDropdownCtrl.zoomOut(); settingsMenuDropdownCtrl.hide()" id="zoom-out-button" prevent-override-role="true" title="{{::settingsMenuDropdownCtrl.zoomOutButtonTitle}}" aria-label="{{::settingsMenuDropdownCtrl.zoomOutButtonTitle}}" data-tid="zoom-out-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuZoomOut}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuZoomOut}}">\n          <ng-include src="\'svg/icons-screen-zoom-out.html\'"/>\n        </button>\n        <span class="zoom-percent-ui">({{settingsMenuDropdownCtrl.zoomPercentString}})</span>\n        <button acc-role="menu-item" class="zoom-icon inset-border inset-border-round inset-border-themed app-icons-fill-hover" ng-click="settingsMenuDropdownCtrl.zoomIn(); settingsMenuDropdownCtrl.hide()" id="zoom-in-button" prevent-override-role="true" title="{{::settingsMenuDropdownCtrl.zoomInButtonTitle}}" aria-label="{{::settingsMenuDropdownCtrl.zoomInButtonTitle}}" data-tid="zoom-in-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuZoomIn}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuZoomIn}}">\n          <ng-include src="\'svg/icons-screen-zoom-in.html\'"/>\n        </button>\n        <button acc-role="menu-item" class="zoom-icon inset-border inset-border-round inset-border-themed app-icons-fill-hover" ng-click="settingsMenuDropdownCtrl.zoomReset(); settingsMenuDropdownCtrl.hide()" id="zoom-reset-button" prevent-override-role="true" title="{{::settingsMenuDropdownCtrl.zoomResetButtonTitle}}" aria-label="{{::settingsMenuDropdownCtrl.zoomResetButtonTitle}}" data-tid="zoom-reset-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuZoomReset}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuZoomReset}}">\n          <ng-include src="\'svg/icons-reset-zoom.html\'"/>\n        </button>\n      </div>\n    </li>\n    <li ng-if="settingsMenuDropdownCtrl.zoomUiEnabled" acc-role="menu-separator" class="divider"></li>\n    \x3c!-- Dev tools --\x3e\n    <li class="popover-parent" acc-role="menu-item focus-default has-sub-menu" ng-if="::settingsMenuDropdownCtrl.layoutService.showDevMenus">\n      <button class="ts-sym">\n        Dev Tools\n        <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n      </button>\n      <ul class="app-default-menu popover child-popover" acc-role="sub-menu" tabindex="-1">\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.settings(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.main_gear_experimental_settings}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuExperimentalSettings}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuExperimentalSettings}}"></button>\n        </li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.tmpsettings(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.main_gear_tmp_settings}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuTmpSettings}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuTmpSettings}}">\n          </button>\n        </li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.debug(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.main_gear_debug_settings}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuDebugSettings}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuDebugSettings}}"></button>\n        </li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.layoutService.hideDebug = !settingsMenuDropdownCtrl.layoutService.hideDebug; settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuDebugElements}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{settingsMenuDropdownCtrl.layoutService.hideDebug ? $root.resources.strings.main_gear_show_debug_elements : $root.resources.strings.main_gear_hide_debug_elements}}">\n            <span ng-if="settingsMenuDropdownCtrl.layoutService.hideDebug" translate-once="{{::$root.resources.strings.main_gear_show_debug_elements}}"></span>\n            <span ng-if="!settingsMenuDropdownCtrl.layoutService.hideDebug" translate-once="{{::$root.resources.strings.main_gear_hide_debug_elements}}"></span>\n          </button>\n        </li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.authenticationService.clearAdalCache(); settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuClearAdalAuthCache}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuClearAdalAuthCache}}">\n            <span translate-once="{{::$root.resources.strings.main_gear_clear_adal_auth_cache}}"></span>\n          </button>\n        </li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.authenticationService.clearSkypeCache(); settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuClearSkypeAuthCache}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuClearSkypeAuthCache}}">\n            <span translate-once="{{::$root.resources.strings.main_gear_clear_skype_auth_cache}}"></span>\n          </button>\n        </li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.openUiToolkit(); settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuUiToolkit}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuUiToolkit}}">\n            <span translate-once="{{::$root.resources.strings.main_gear_open_ui_toolkit}}"></span>\n          </button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="settingsMenuDropdownCtrl.showCortanaDevTools">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.cortanaDevToolsDialog(); settingsMenuDropdownCtrl.hide()">\n            <span>Cortana Dev Tools</span>\n          </button>\n        </li>\n      </ul>\n    </li>\n    \x3c!-- API selector --\x3e\n    <li class="popover-parent" acc-role="menu-item focus-default has-sub-menu" ng-if="::settingsMenuDropdownCtrl.showApiSelector">\n      <button class="ts-sym">\n        Service: {{::settingsMenuDropdownCtrl.currentApiDisplayName}}\n        <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n      </button>\n\n      <ul class="app-default-menu popover child-popover" acc-role="sub-menu" tabindex="-1">\n        <li ng-repeat="api in settingsMenuDropdownCtrl.apis" acc-role="sub-menu-item" ng-class="::{ active: api.active }">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.switchApi(api.identifier); settingsMenuDropdownCtrl.hide()">\n            {{::api.displayName}}\n            <ng-include ng-if="api.active" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n          </button>\n        </li>\n      </ul>\n    </li>\n    \x3c!-- Ring selector --\x3e\n    <li class="popover-parent" acc-role="menu-item focus-default has-sub-menu" ng-if="::settingsMenuDropdownCtrl.showRingSelector">\n      <button class="ts-sym">\n        {{::settingsMenuDropdownCtrl.ringSelectorTitle}}: {{::settingsMenuDropdownCtrl.currentWebRingDisplayName}}\n        <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n      </button>\n      <ul class="app-default-menu popover child-popover" acc-role="sub-menu" tabindex="-1" ng-class="{ \'settings-popover-many-rings\': (settingsMenuDropdownCtrl.rings.length > 4) }">\n\n        <li ng-repeat="ring in settingsMenuDropdownCtrl.rings" ng-class="{ active: ring.active }" acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.switchRing(ring.identifier); settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuSwitchRing}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::ring.displayName}}">\n            {{::ring.displayName}}\n            <ng-include ng-if="ring.active" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n          </button>\n        </li>\n        <li acc-role="menu-separator" class="divider"></li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.showRingSelectionDialog(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.ringSetting_more_options}}"></button>\n        </li>\n      </ul>\n    </li>\n    <li ng-if="::(settingsMenuDropdownCtrl.layoutService.showDevMenus || settingsMenuDropdownCtrl.showApiSelector || settingsMenuDropdownCtrl.showRingSelector)" acc-role="menu-separator" class="divider"></li>\n    \x3c!-- Preview dialog button --\x3e\n    <li acc-role="menu-item" ng-if="::settingsMenuDropdownCtrl.displayPreviewButtonInMeMenu">\n      <button class="ts-sym" data-tid="openPreviewNewFeaturesDialogButton" ng-click="settingsMenuDropdownCtrl.openPreviewNewFeaturesDialog(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.settings_preview_new_features}}">\n      </button>\n    </li>\n    \x3c!-- Mopo link --\x3e\n    <li acc-role="sub-menu-item" ng-if="!settingsMenuDropdownCtrl.isFreemiumAdmin && settingsMenuDropdownCtrl.isAdmin && settingsMenuDropdownCtrl.enableMopoLink">\n      <a data-tid="mopoUrl" href="{{::settingsMenuDropdownCtrl.mopoLinkUrl}}" ng-click="settingsMenuDropdownCtrl.hide()" target="_blank" aria-label="{{::settingsMenuDropdownCtrl.settingsManageAriaLabel}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuAdminPortal}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.resources.strings.optionsMenuAdminPortal}}" translate-once="{{::$root.resources.strings.main_gear_admin_portal}}">\n      </a>\n    </li>\n    \x3c!-- Manage tenant --\x3e\n    <li acc-role="menu-item" ng-if="::settingsMenuDropdownCtrl.isFreemiumAdmin" data-prevent-trigger-refocus="true">\n      <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.gotoManage(); settingsMenuDropdownCtrl.hide()" id="manage-button" aria-label="{{::settingsMenuDropdownCtrl.settingsManageAriaLabel}}" data-tid="manage-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuManageTenant}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuManageTenant}}" translate-once="{{::$root.resources.strings.main_gear_manage}}">\n      </button>\n    </li>\n    \x3c!-- New help button --\x3e\n    <li acc-role="menu-item" ng-if="settingsMenuDropdownCtrl.enableHelpItem && !settingsMenuDropdownCtrl.enableNewHelpInAppBar">\n      <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.gotoHelp(); settingsMenuDropdownCtrl.hide()" id="help-button" aria-label="{{::settingsMenuDropdownCtrl.helpButtonTitle}}" data-tid="help-button" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuHelp}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuHelp}}" translate-once="{{::$root.resources.strings.main_gear_help}}"></button>\n    </li>\n    \x3c!-- Keyboard shortcuts --\x3e\n    <li acc-role="menu-item focus-default" ng-if="!settingsMenuDropdownCtrl.isSurfaceHub">\n      <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.keyboardShortcuts(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.main_gear_keyboard_shortcuts}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuKeyboardShortcuts}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuKeyboardShortcuts}}"></button>\n    </li>\n    \x3c!-- About --\x3e\n    <li class="popover-parent" data-tid="about-menu" acc-role="menu-item has-sub-menu">\n      <button class="ts-sym" aria-label="{{::settingsMenuDropdownCtrl.aboutButtonTitle}}">\n        {{::$root.resources.strings.main_gear_about | translate}}\n        <ng-include class="right-align-icon" src="\'svg/icons-patharrow.html\'"></ng-include>\n      </button>\n      <ul class="app-default-menu popover child-popover move-up" acc-role="sub-menu" tabindex="-1">\n        <li acc-role="sub-menu-item" ng-if="settingsMenuDropdownCtrl.isDesktopApp">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.about(); settingsMenuDropdownCtrl.hide()" id="about-button" data-tid="about-button" translate-once="{{::$root.resources.strings.settings_version}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuAbout}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuAbout}}"></button>\n        </li>\n        <li acc-role="sub-menu-item">\n          <a data-tid="legal" href="{{::settingsMenuDropdownCtrl.legalLinkUrl}}" ng-click="settingsMenuDropdownCtrl.hide()" target="_blank" translate-once="{{::$root.resources.strings.main_gear_legal}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuLegal}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuLegal}}">\n          </a>\n        </li>\n        <li acc-role="sub-menu-item">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.openPrivacyLink(); settingsMenuDropdownCtrl.hide()" id="privacy-button" data-tid="privacy-cookies" translate-once="{{::$root.resources.strings.main_gear_privacy}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuPrivacyNotice}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuPrivacyNotice}}"></button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="::settingsMenuDropdownCtrl.hasTeamsPrivacyFaqUrl()">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.openPrivacyFaqLink(); settingsMenuDropdownCtrl.hide()" id="teams-privacy-faq-button" data-tid="teams-privacy-faq" translate-once="{{::$root.resources.strings.main_gear_teams_privacy_faq}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuPrivacyFaq}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuPrivacyFaq}}"></button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="::settingsMenuDropdownCtrl.enableDesktopTpn">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.desktopThirdPartyNoticeShow(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.main_gear_desktop_third_party_notice}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuDesktopThirdPartyNotice}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuDesktopThirdPartyNotice}}"></button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="::settingsMenuDropdownCtrl.enableDesktopTpn">\n          <button class="ts-sym" data-tid="third-party-notice-button" ng-click="settingsMenuDropdownCtrl.thirdPartyNoticeDialogShow(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.main_gear_desktop_browser_third_party_notice}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuWebThirdPartyNotice}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuWebThirdPartyNotice}}"></button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="::settingsMenuDropdownCtrl.enableWebTPN">\n          <button class="ts-sym" data-tid="third-party-notice-button" ng-click="settingsMenuDropdownCtrl.thirdPartyNoticeDialogShow(); settingsMenuDropdownCtrl.hide()" translate-once="{{::$root.resources.strings.main_gear_third_party_notice}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuWebThirdPartyNotice}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuWebThirdPartyNotice}}"></button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="::settingsMenuDropdownCtrl.showPublicDevPreviewSetting" ng-class="::{\'active\': settingsMenuDropdownCtrl.publicDevPreviewEnabled}">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.togglePublicDevPreview(true); settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuDevPreview}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::settingsMenuDropdownCtrl.publicDevPreviewEnabled ? \'Disable PublicDevPreview\' : \'Enable PublicDevPreview\'}}">\n            {{::$root.resources.strings.main_gear_developer_preview | translate}}\n            <ng-include ng-if="::settingsMenuDropdownCtrl.publicDevPreviewEnabled" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n          </button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="::settingsMenuDropdownCtrl.showPublicPreviewSetting" ng-class="::{\'active\': settingsMenuDropdownCtrl.publicDevPreviewEnabled}">\n          <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.togglePublicDevPreview(false); settingsMenuDropdownCtrl.hide()" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuPublicPreview}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::settingsMenuDropdownCtrl.publicDevPreviewEnabled ? \'Disable PublicPreview\' : \'Enable PublicPreview\'}}">\n            {{::$root.resources.strings.main_gear_public_preview | translate}}\n            <ng-include ng-if="::settingsMenuDropdownCtrl.publicDevPreviewEnabled" src="\'svg/icons-check.html\'" class="right-align-icon"></ng-include>\n          </button>\n        </li>\n        <li acc-role="sub-menu-item" ng-if="::settingsMenuDropdownCtrl.showFrA11yLink">\n          <a data-tid="fr-a11y" href="{{::settingsMenuDropdownCtrl.frA11yLinkUrl}}" ng-click="settingsMenuDropdownCtrl.hide()" target="_blank" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuFrA11yLink}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuFrA11yLink}}" translate-once="{{::$root.resources.strings.main_gear_fr_a11y_link}}">\n         </a>\n        </li>\n      </ul>\n    </li>\n    \x3c!-- Check for updates --\x3e\n    <li acc-role="menu-item" ng-if="settingsMenuDropdownCtrl.isDesktopApp">\n      <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.checkForUpdates(); settingsMenuDropdownCtrl.hide()" id="checkupdates-button" aria-label="{{::settingsMenuDropdownCtrl.checkUpdateButtonTitle}}" data-tid="checkupdates-button" translate-once="{{::$root.resources.strings.main_gear_check_for_updates}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuCheckForUpdates}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuCheckForUpdates}}"></button>\n    </li>\n    \x3c!-- Download desktop app --\x3e\n    <li acc-role="menu-item" ng-if="::settingsMenuDropdownCtrl.showDesktopDownload">\n      <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.downloadApp(); settingsMenuDropdownCtrl.hide()" id="download-app-button" data-tid="download-app-button" translate-once="{{::$root.resources.strings.main_gear_download_app}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuDownloadDesktopApp}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuDownloadDesktopApp}}"></button>\n    </li>\n    \x3c!-- Download mobile app --\x3e\n    <li acc-role="menu-item" ng-if="::settingsMenuDropdownCtrl.showMobileDownload">\n      <button class="ts-sym" ng-click="settingsMenuDropdownCtrl.downloadMobileApp(); settingsMenuDropdownCtrl.hide()" id="download-mobile-app-button" aria-label="{{::settingsMenuDropdownCtrl.downloadMobileAppButtonTitle}}" data-tid="download-mobile-app-button" translate-once="{{::$root.resources.strings.main_gear_download_mobile_apps}}" track-outcome="{{::$root.trackConstants.trackOutcome.select}}" track-scenario="{{::$root.trackConstants.trackScenario.optionsMenuDownloadMobileApp}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.config}}" track-name="{{::$root.trackConstants.trackModuleName.optionsMenuItem}}" track-type="{{::$root.trackConstants.trackType.other}}" track-summary="{{::$root.trackConstants.trackScenario.optionsMenuDownloadMobileApp}}"></button>\n    </li>\n  </ul>\n</div>\n'}},[2264]);